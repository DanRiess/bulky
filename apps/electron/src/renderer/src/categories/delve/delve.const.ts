import { typedFromEntries, getKeys } from '@shared/types/utility.types'

export const DELVE_TYPE = {
	ABERRANT_FOSSIL: 'ABERRANT_FOSSIL',
	AETHERIC_FOSSIL: 'AETHERIC_FOSSIL',
	BLOODSTAINED_FOSSIL: 'BLOODSTAINED_FOSSIL',
	BOUND_FOSSIL: 'BOUND_FOSSIL',
	CORRODED_FOSSIL: 'CORRODED_FOSSIL',
	DEFT_FOSSIL: 'DEFT_FOSSIL',
	DENSE_FOSSIL: 'DENSE_FOSSIL',
	FACETED_FOSSIL: 'FACETED_FOSSIL',
	FRACTURED_FOSSIL: 'FRACTURED_FOSSIL',
	FRIGID_FOSSIL: 'FRIGID_FOSSIL',
	FUNDAMENTAL_FOSSIL: 'FUNDAMENTAL_FOSSIL',
	GILDED_FOSSIL: 'GILDED_FOSSIL',
	GLYPHIC_FOSSIL: 'GLYPHIC_FOSSIL',
	HOLLOW_FOSSIL: 'HOLLOW_FOSSIL',
	JAGGED_FOSSIL: 'JAGGED_FOSSIL',
	LUCENT_FOSSIL: 'LUCENT_FOSSIL',
	METALLIC_FOSSIL: 'METALLIC_FOSSIL',
	OPULENT_FOSSIL: 'OPULENT_FOSSIL',
	PRISMATIC_FOSSIL: 'PRISMATIC_FOSSIL',
	PRISTINE_FOSSIL: 'PRISTINE_FOSSIL',
	SANCTIFIED_FOSSIL: 'SANCTIFIED_FOSSIL',
	SCORCHED_FOSSIL: 'SCORCHED_FOSSIL',
	SERRATED_FOSSIL: 'SERRATED_FOSSIL',
	SHUDDERING_FOSSIL: 'SHUDDERING_FOSSIL',
	TANGLED_FOSSIL: 'TANGLED_FOSSIL',
	POTENT_CHAOTIC_RESONATOR: 'POTENT_CHAOTIC_RESONATOR',
	POWERFUL_CHAOTIC_RESONATOR: 'POWERFUL_CHAOTIC_RESONATOR',
	PRIME_CHAOTIC_RESONATOR: 'PRIME_CHAOTIC_RESONATOR',
	PRIMITIVE_CHAOTIC_RESONATOR: 'PRIMITIVE_CHAOTIC_RESONATOR',
} as const

export const DELVE_TYPE_IDX_TO_NAME = getKeys(DELVE_TYPE)

export const DELVE_TYPE_NAME_TO_IDX = typedFromEntries(
	Object.entries(DELVE_TYPE_IDX_TO_NAME).map(([key, value]) => [value, parseInt(key)])
)
